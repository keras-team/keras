#pragma once

// @generated by torchgen/gen.py from Function.h

#include <ATen/Context.h>
#include <ATen/DeviceGuard.h>
#include <ATen/TensorUtils.h>
#include <ATen/TracerMode.h>
#include <ATen/core/Generator.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <optional>



#include <ATen/ops/_shape_as_tensor_ops.h>

namespace at {


// aten::_shape_as_tensor(Tensor self) -> Tensor
inline at::Tensor _shape_as_tensor(const at::Tensor & self) {
    return at::_ops::_shape_as_tensor::call(self);
}

}
